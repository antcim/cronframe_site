"use strict";(self.webpackChunkcronframesite=self.webpackChunkcronframesite||[]).push([[421],{6275:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=o(4848),r=o(8453);const i={sidebar_position:3},c="Function Job",s={id:"tutorial-framework/Job Definition/function job",title:"Function Job",description:'A function annotated with the fn_job macro defined inside the implementation block of a cron object is known as a "function job" inside cronframe.',source:"@site/docs/tutorial-framework/Job Definition/function job.md",sourceDirName:"tutorial-framework/Job Definition",slug:"/tutorial-framework/Job Definition/function job",permalink:"/cronframe_site/docs/next/tutorial-framework/Job Definition/function job",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-framework/Job Definition/function job.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"A Cron Object",permalink:"/cronframe_site/docs/next/tutorial-framework/Job Definition/cron object"},next:{title:"Method Job",permalink:"/cronframe_site/docs/next/tutorial-framework/Job Definition/method job"}},a={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"function-job",children:"Function Job"})}),"\n",(0,t.jsxs)(n.p,{children:["A function annotated with the ",(0,t.jsx)(n.code,{children:"fn_job"}),' macro defined inside the implementation block of a cron object is known as a "function job" inside cronframe.']}),"\n",(0,t.jsx)(n.p,{children:"The macro attibutes are identical to those of the cron macro:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["expr","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the cron expression to use for the job's schedule"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["timeout","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the value in ms to use for the timeout which resets daily"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"We use the code of the cron object defined on the previous page and add a function job to it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'#[marco_use] extern crate cronframe;\n\nuse cronframe::CronFrame;\n\n#[cron_obj]\nstruct WeatherJob;\n\n#[cron_impl]\nimpl WeatherJob{\n    #[fn_job(expr="0 0 0/12 * * *", timeout="0")]\n    fn my_function_job(){\n        println!("I run once every 12 hours every day.");\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now that we have the job definition down, we need a framework instance where it can run, and to pass the job to it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"use cronframe::CronFrame;\n\nfn main(){\n    let cronframe = CronFrame::default();\n\n    WeatherJob::cf_gather_fn(cronframe.clone());\n\n    cronframe.run(); \n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The function ",(0,t.jsx)(n.code,{children:"cf_gather_fn"})," is injected by the framework inside cron objects and has effect only the first time it is called on a cron object type. It collects all functions jobs and passes them to cronframe."]}),"\n",(0,t.jsx)(n.p,{children:"Function jobs are related to the type rather than one of its possible instances."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>s});var t=o(6540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);